// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+s",
    "command": "editor.action.insertSnippet"
  },
  {
    "key": "`",
    "command": "editor.action.insertSnippet",
    "when": "editorHasSelection && editorTextFocus",
    "args": {
      "snippet": "`${0:${TM_SELECTED_TEXT}}`"
    }
  },
  {
    "key": "cmd-ctrl-`",
    "command": "workbench.action.terminal.split"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus",
    "args": {
      "text": "\"${file}\""
    }
  },
  {
    "key": "ctrl-cmd+r",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus",
    "args": {
      "text": "\"${fileDirname}/\""
    }
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus",
    "args": {
      "text": "[${fileBasename}] "
    }
  },
  {
    "key": "shift+alt+cmd+k",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+cmd+j",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+8",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "cmd+shift+8",
    "command": "editor.action.marker.prev",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "shift+cmd+r",
    "command": "revealFileInOS"
  },
  {
    "key": "shift+cmd+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "cmd+ctrl+space",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "\u000B\u0015qs \"${file}\"\u000D"
    }
  },
  {
    "key": "cmd+=",
    "command": "extension.customWindowZoomIn"
  },
  {
    "key": "cmd+9",
    "command": "-extension.customWindowZoomIn"
  },
  {
    "key": "cmd+-",
    "command": "extension.customWindowZoomOut"
  },
  {
    "key": "cmd+8",
    "command": "-extension.customWindowZoomOut"
  },
  {
    "key": "ctrl+=",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+,",
    "command": "-editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+,",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "alt+f",
    "command": "formattingToggle.toggleFormat"
  },
  {
    "key": "ctrl+cmd+p",
    "command": "workbench.profiles.actions.switchProfile"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "shift+cmd+d",
    "command": "editor.action.duplicateSelection"
  },
  {
    "key": "ctrl+cmd+m",
    "command": "extension.toggleCase",
    "when": "editorHasSelection"
  },
  {
    "key": "cmd+m",
    "command": "-extension.toggleCase",
    "when": "editorHasSelection"
  },
  {
    "key": "cmd+v",
    "command": "editor.action.pasteAs",
    "args": {
      "id": "text"
    },
    "when": "!editorHasSelection && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+v",
    "command": "editor.action.clipboardPasteAction",
    "args": {},
    "when": "editorHasSelection || editorLangId != 'markdown'"
  },
  {
    "key": "cmd+v",
    "command": "-editor.action.clipboardPasteAction"
  }
]
