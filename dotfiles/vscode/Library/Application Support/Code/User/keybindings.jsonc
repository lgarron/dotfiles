// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+s",
    "command": "editor.action.insertSnippet"
  },
  {
    "key": "ctrl+shift+s",
    "command": "editor.action.surroundWithSnippet",
    "when": "editorHasSelection && !editorReadonly"
  },
  {
    "key": "`",
    "command": "editor.action.insertSnippet",
    "when": "editorHasSelection && editorTextFocus",
    "args": {
      "snippet": "`${0:${TM_SELECTED_TEXT}}`"
    }
  },
  {
    "key": "shift+cmd+enter",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus",
    "args": {
      "text": "\"${relativeFile}\""
    }
  },
  {
    "key": "alt+cmd+enter",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus",
    "args": {
      "text": "\"${file}\""
    }
  },
  {
    "key": "shift+ctrl+r",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus",
    "args": {
      "text": "[${fileBasename}] "
    }
  },
  {
    "key": "shift+alt+cmd+k",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+cmd+j",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+8",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+8",
    "command": "editor.action.marker.prev",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "shift+cmd+r",
    "command": "revealFileInOS"
  },
  {
    "key": "shift+cmd+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "cmd+ctrl+space",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "\u000B\u0015qs \"${file}\"\u000D"
    }
  },
  {
    "key": "cmd+=",
    "command": "extension.customWindowZoomIn"
  },
  {
    "key": "cmd+9",
    "command": "-extension.customWindowZoomIn"
  },
  {
    "key": "cmd+-",
    "command": "extension.customWindowZoomOut"
  },
  {
    "key": "cmd+8",
    "command": "-extension.customWindowZoomOut"
  },
  {
    "key": "ctrl+=",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+,",
    "command": "-editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+,",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "cmd-j cmd-m",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "cmd-j cmd-m",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "alt+f",
    "command": "formattingToggle.toggleFormat"
  },
  {
    "key": "ctrl+cmd+p",
    "command": "workbench.profiles.actions.switchProfile"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "shift+cmd+d",
    "command": "editor.action.duplicateSelection"
  },
  {
    "key": "ctrl+cmd+m",
    "command": "extension.toggleCase",
    "when": "editorHasSelection"
  },
  {
    "key": "cmd+m",
    "command": "-extension.toggleCase",
    "when": "editorHasSelection"
  },
  // Smart link paste for Markdown
  // See: https://github.com/microsoft/vscode/issues/188871#issuecomment-1728667796
  // {
  //   "key": "cmd+v",
  //   "command": "editor.action.pasteAs",
  //   "args": {
  //     "id": "text"
  //   },
  //   "when": "inputFocus && !editorHasSelection && editorLangId == 'markdown'"
  // },
  // {
  //   "key": "cmd+v",
  //   "command": "-editor.action.clipboardPasteAction",
  //   "when": "inputFocus && !editorHasSelection && editorLangId == 'markdown'"
  // },
  {
    "key": "shift-cmd+v",
    "command": "editor.action.pasteAs",
    "args": {
      "id": "text"
    },
    "when": "inputFocus && editorHasSelection"
  },
  {
    "key": "shift+cmd+c",
    "command": "gitlens.copyRemoteFileUrlToClipboard"
  },
  {
    "key": "cmd+j cmd+s",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },
  {
    "key": "cmd+r",
    "command": "workbench.files.action.showActiveFileInExplorer",
    "when": "!terminalFocus",
  },
  {
    "key": "ctrl+shift+cmd+p",
    "command": "workbench.action.experimental.quickTextSearch"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "cmd+j cmd+l",
    "command": "workbench.action.positionPanelRight"
  },
  {
    "key": "cmd+j cmd+h",
    "command": "workbench.action.positionPanelLeft"
  },
  {
    "key": "cmd+j cmd+k",
    "command": "workbench.action.positionPanelTop"
  },
  {
    "key": "cmd+j cmd+j",
    "command": "workbench.action.positionPanelBottom"
  },
  {
    "key": "cmd+enter",
    "command": "workbench.action.terminal.toggleTerminal",
  },
  {
    "key": "cmd-ctrl-enter",
    "command": "workbench.action.terminal.split"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "backspace",
    "command": "workbench.debug.panel.action.clearReplAction",
    "when": "focusedView == 'workbench.panel.repl.view'"
  },
  {
    "key": "cmd+k",
    "command": "-workbench.debug.panel.action.clearReplAction",
    "when": "focusedView == 'workbench.panel.repl.view'"
  },
  {
    "key": "shift+down",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "-workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+left",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "-workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+right",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "-workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+up",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "-workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
]
